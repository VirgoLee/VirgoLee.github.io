<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>瑰意琦行</title>
  
  <subtitle>不忘初心,方得始终</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://www.lixueduan.com/"/>
  <updated>2018-12-27T16:11:42.583Z</updated>
  <id>https://www.lixueduan.com/</id>
  
  <author>
    <name>意琦行</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Int与Integer比较</title>
    <link href="https://www.lixueduan.com/java-int-Integer/"/>
    <id>https://www.lixueduan.com/java-int-Integer/</id>
    <published>2018-12-29T11:42:12.598Z</published>
    <updated>2018-12-27T16:11:42.583Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Sat Dec 29 2018 20:01:10 GMT+0800 (GMT+08:00) --><h2 id="Int与Integer比较"><a href="#Int与Integer比较" class="headerlink" title="Int与Integer比较"></a>Int与Integer比较</h2><p>如果说Integer与int的区别：估计大多数人只会说道两点，Ingeter是int的包装类，int的初值为0，Ingeter的初值为null。</p><p>如果说Integer与int的区别：估计大多数人只会说道两点，Ingeter是int的包装类，int的初值为0，Ingeter的初值为null。如果说Integer与int的区别：估计大多数人只会说道两点，Ingeter是int的包装类，int的初值为0，Ingeter的初值为null。如果说Integer与int的区别：估计大多数人只会说道两点，Ingeter是int的包装类，int的初值为0，Ingeter的初值为null.如果说Integer与int的区别：估计大多数人只会说道两点，Ingeter是int的包装类，int的初值为0，Ingeter的初值为null。如果说Integer与int的区别：估计大多数人只会说道两点，Ingeter是int的包装类，int的初值为0，Ingeter的初值为null。如果说Integer与int的区别：估计大多数人只会说道两点，Ingeter是int的包装类，int的初值为0，Ingeter的初值为null。如果说Integer与int的区别：估计大多数人只会说道两点，Ingeter是int的包装类，int的初值为0，Ingeter的初值为null。如果说Integer与int的区别：估计大多数人只会说道两点，Ingeter是int的包装类，int的初值为0，Ingeter的初值为null。如果说Integer与int的区别：估计大多数人只会说道两点，Ingeter是int的包装类，int的初值为0，Ingeter的初值为null。如果说Integer与int的区别：估计大多数人只会说道两点，Ingeter是int的包装类，int的初值为0，Ingeter的初值为null。如果说Integer与int的区别：估计大多数人只会说道两点，Ingeter是int的包装类，int的初值为0，Ingeter的初值为null。如果说Integer与int的区别：估计大多数人只会说道两点，Ingeter是int的包装类，int的初值为0，Ingeter的初值为null。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestInteger</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> i = <span class="number">128</span>;</span><br><span class="line">        Integer i2 = <span class="number">128</span>;</span><br><span class="line">        Integer i3 = <span class="keyword">new</span> Integer(<span class="number">128</span>);</span><br><span class="line">        <span class="comment">//Integer会自动拆箱为int，所以为true</span></span><br><span class="line">        System.out.println(i == i2);</span><br><span class="line">        System.out.println(i == i3);</span><br><span class="line">        System.out.println(<span class="string">"——————————————————————"</span>);</span><br><span class="line">        <span class="comment">//java在编译的时候,被翻译成-&gt; Integer i5 = Integer.valueOf(127);</span></span><br><span class="line">        Integer i5 = <span class="number">127</span>;</span><br><span class="line">        Integer i6 = <span class="number">127</span>;</span><br><span class="line">        System.out.println(i5 == i6);<span class="comment">//true</span></span><br><span class="line">        <span class="comment">//Integer i5 = 128;</span></span><br><span class="line">        <span class="comment">//Integer i6 = 128;</span></span><br><span class="line">        <span class="comment">//System.out.println(i5 == i6);//false</span></span><br><span class="line">        Integer ii5 = <span class="keyword">new</span> Integer(<span class="number">127</span>);</span><br><span class="line">        System.out.println(i5 == ii5); <span class="comment">//false</span></span><br><span class="line">        Integer i7 = <span class="keyword">new</span> Integer(<span class="number">128</span>);</span><br><span class="line">        Integer i8 = <span class="keyword">new</span> Integer(<span class="number">123</span>);</span><br><span class="line">        System.out.println(i7 == i8);  <span class="comment">//false</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其实java在编译Integer i5 = 127 的时候,被翻译成-&gt; Integer i5 = Integer.valueOf(127);</p><p>所以关键就是看valueOf()函数了，只要看看valueOf()函数的源码就会明白了。</p><p>JDK源码的valueOf函数式这样的：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Integer <span class="title">valueOf</span><span class="params">(<span class="keyword">int</span> i)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">assert</span> IntegerCache.high &gt;= <span class="number">127</span>;</span><br><span class="line">        <span class="keyword">if</span> (i &gt;= IntegerCache.low &amp;&amp; i &lt;= IntegerCache.high)</span><br><span class="line">            <span class="keyword">return</span> IntegerCache.cache[i + (-IntegerCache.low)];</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Integer(i);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>看一下源码大家都会明白，对于-128到127之间的数，会进行缓存，Integer i5 = 127时，会将127进行缓存，下次再写Integer i6 = 127时，就会直接从缓存中取，就不会new了。所以22行的结果为true，而25行为false。</p><p>对于27行和30行，因为对象不一样，所以为false。</p><h2 id="结论："><a href="#结论：" class="headerlink" title="结论："></a>结论：</h2><ul><li>①无论如何，Integer与new Integer不会相等。i3的引用指向堆，而i4指向专门存放他的内存（常量池），他们的内存地址不一样，所以为false</li><li>②两个都是非new出来的Integer，如果数在-128到127之间，则是true,否则为false, java在编译Integer i2 = 128的时候,被翻译成-&gt; Integer i2 = Integer.valueOf(128);而valueOf()函数会对-128到127之间的数进行缓存</li><li>③两个都是new出来的,则为false</li><li><p>④int和integer(无论new否)都为true，因为会把Integer自动拆箱为int。</p><p><img src="https://github.com/lillusory/lillusory.github.io/raw/master/images/posts/Java/Java_int_Integer.jpg" alt="int-Integer"></p></li></ul><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Sat Dec 29 2018 20:01:10 GMT+0800 (GMT+08:00) --&gt;&lt;h2 id=&quot;Int与Integer比较&quot;&gt;&lt;a href=&quot;#Int与Integer比较&quot; class=&quot;headerlink&quot; title=&quot;I
      
    
    </summary>
    
      <category term="Android" scheme="https://www.lixueduan.com/categories/Android/"/>
    
    
      <category term="Java" scheme="https://www.lixueduan.com/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://www.lixueduan.com/hello-world/"/>
    <id>https://www.lixueduan.com/hello-world/</id>
    <published>2018-12-29T11:42:12.594Z</published>
    <updated>2018-12-27T15:17:11.963Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Sat Dec 29 2018 20:01:09 GMT+0800 (GMT+08:00) --><p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Sat Dec 29 2018 20:01:09 GMT+0800 (GMT+08:00) --&gt;&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hex
      
    
    </summary>
    
    
  </entry>
  
</feed>
